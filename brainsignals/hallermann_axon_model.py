from os.path import join
import numpy as np
import neuron
h = neuron.h

#  Parameters extracted from Hallermann et al. (2012) model by neuron.psection(sec=sec)

mechanisms_folder = join("cell_models", "HallermannEtAl2012")

soma_dict = {'point_processes':
                 {'ISyn': {"ISyn[0]"}},
             'density_mechs': {
                 'pas': {
                     'g': [6.666666666666667e-05],
                     'e': [-85.0],
                     'i': [0.0003333333333333334]},
                 'cad': {
                     'ca': [0.0001]},
                 'ca': {
                     'gbar': [0.2],
                     'icaH': [-1.5342303289947242e-12],
                     'gcaH': [6.973774222703291e-11],
                     'minf': [2.290696276039695e-05],
                     'hinf': [0.6645120606535466],
                     'mtau': [0.552075787550371],
                     'htau': [194.2550703259956],
                     'm': [2.290696276039695e-05],
                     'h': [0.6645120606535466]},
                 'it2': {
                     'gcabar': [0.2],
                     'icaT': [-3.509142036283423e-06],
                     'gcaT': [0.00015950645619470106],
                     'minf': [0.0330378526075962],
                     'hinf': [0.7306756725427105],
                     'mtau': [3.000553084370054],
                     'htau': [30.0],
                     'm': [0.0330378526075962],
                     'h': [0.7306756725427105]},
                 'charge_': {
                     'vmin': [1000000.0],
                     'tmin': [0.0],
                     'vmax': [-1000000.0],
                     'tmax': [0.0],
                     'na_ch': [0.0],
                     'na_ch_overl': [0.0],
                     'overl': [0.0],
                     'na_ch_excess_ratio': [0.0],
                     'na_ch_before_peak': [0.0],
                     'na_ch_after_peak': [0.0],
                     'peak_reached': [0.0],
                     'peak_time': [0.0]},
                 'ih': {
                     'gbar': [0.0002],
                     'Ih': [-0.0003445631029984296],
                     'h': [0.04922330042834708]},
                 'kca': {
                     'gbar': [0.1],
                     'ikca': [1.1404001336086272e-07],
                     'gkca': [6.335556297825706e-05],
                     'ninf': [0.0006335556297825706],
                     'ntau': [0.17380285989047262],
                     'n': [0.0006335556297825706]},
                 'Kv1': {
                     'gbar': [100.0],
                     'ikv1': [6.236822911446829e-05],
                     'gkv1': [0.0346490161747046],
                     'n': [0.3777199681914274],
                     'h1': [0.8362407987671049],
                     'h2': [0.836240798767105]},
                 'Kv7': {
                     'gbar': [1.0],
                     'ik': [3.526544542905438e-05],
                     'm': [0.019591914127252436]},
                 'Kv': {
                     'gbar': [100.0],
                     'gk': [0.019743387881495898],
                     'ninf': [8.584081687606914e-05],
                     'ntau': [0.666490399954209],
                     'n': [8.584081687606914e-05]},
                 'na': {
                     'gbar': [500.0],
                     'a1_0': [45.8498],
                     'a1_1': [0.0239354],
                     'b1_0': [0.0144095],
                     'b1_1': [0.0884761],
                     'a2_0': [19.8084],
                     'a2_1': [0.0221771],
                     'b2_0': [0.565017],
                     'b2_1': [0.061084],
                     'a3_0': [71.8119],
                     'a3_1': [0.0659379],
                     'b3_0': [0.753118],
                     'b3_1': [0.0364798],
                     'bh_0': [2.83015],
                     'bh_1': [0.289005],
                     'bh_2': [0.069603],
                     'ah_0': [0.575782],
                     'ah_1': [162.841],
                     'ah_2': [0.0268011],
                     'vShift_inact_local': [0.0],
                     'gna': [0.009401056976010074],
                     'ina_ina': [-0.00012221374068813098],
                     'c1': [0.738230846482624],
                     'c2': [0.09614607838807425],
                     'c3': [0.0019714959702729806],
                     'i1': [0.1444326848287274],
                     'i2': [0.018810696278093966],
                     'i3': [0.00038571736345875777],
                     'i4': [3.6785747965556776e-06],
                     'o': [1.880211395202015e-05]}
             },
             'ions': {
                 'na': {
                     'ena': [55.0],
                     'nai': [10.0],
                     'nao': [140.0],
                     'ina': [-0.000126914269176136],
                     'dina_dv_': [9.401056975803009e-07]},
                 'k': {
                     'ek': [-98.0],
                     'ki': [54.4],
                     'ko': [2.5],
                     'ik': [0.00013328581274357616],
                     'dik_dv_': [7.404767374667257e-06]},
                 'ca': {
                     'eca': [140.0],
                     'cai': [0.0001],
                     'cao': [2.0],
                     'ica': [-3.509143570513752e-06],
                     'dica_dv_': [1.5950652593346576e-08]}},
             'morphology': {
                 'L': 35.01938165459337,
                 'diam': [16.149765688199338],
                 'pts3d': [(-0.45814499258995056, -15.614399909973145, 0.0, 4.6549201011657715),
                   (-0.274150013923645, -13.873100280761719, 0.0, 7.420249938964844),
                   (-0.09015530347824097, -12.131799697875977, 0.0, 10.9399995803833),
                   (0.09383980184793472, -10.390600204467773, 0.0, 17.155399322509766),
                   (0.27783501148223877, -8.649290084838867, 0.0, 21.318199157714844),
                   (0.4618299901485443, -6.908010005950928, 0.0, 23.688100814819336),
                   (0.6458250284194946, -5.166729927062988, 0.0, 24.03860092163086),
                   (0.8298199772834778, -3.42546010017395, 0.0, 24.89889907836914),
                   (1.0138200521469116, -1.6841800212860107, 0.0, 23.833900451660156),
                   (1.1978100538253784, 0.05709660053253174, 0.0, 23.057899475097656),
                   (1.381809949874878, 1.7983700037002563, 0.0, 21.673599243164062),
                   (1.5657999515533447, 3.5396499633789062, 0.0, 19.637800216674805),
                   (1.7497999668121338, 5.280930042266846, 0.0, 18.040300369262695),
                   (1.9337899684906006, 7.022200107574463, 0.0, 16.106000900268555),
                   (2.1177899837493896, 8.763480186462402, 0.0, 14.318499565124512),
                   (2.3017799854278564, 10.504799842834473, 0.0, 12.517499923706055),
                   (2.4857800006866455, 12.246000289916992, 0.0, 11.455499649047852),
                   (2.6697700023651123, 13.987299919128418, 0.0, 10.570500373840332),
                   (2.8537700176239014, 15.728599548339844, 0.0, 9.745100021362305),
                   (3.037760019302368, 17.469900131225586, 0.0, 7.817170143127441),
                   (3.2217600345611572, 19.21109962463379, 0.0, 4.868790149688721)],
                 'parent': None,
                 'trueparent': None},
             'nseg': 1,
             'Ra': 80.0,
             'cm': [1.0],
             'regions': set(),
             'species': set(),
             'name': 'soma',
             'hoc_internal_name': '__nrnsec_0x3b2efd0',
             'cell': None}

ais_dict = {
    'point_processes': {},
    'density_mechs': {
        'pas': {
            'g': [6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05],
            'e': [-85.0, -85.0, -85.0],
            'i': [0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334]},
        'cad': {
            'ca': [0.0001, 0.0001, 0.0001]},
        'ca': {
            'gbar': [0.0, 0.0, 0.0],
            'icaH': [-0.0, -0.0, -0.0],
            'gcaH': [0.0, 0.0, 0.0],
            'minf': [2.290696276039695e-05, 2.290696276039695e-05, 2.290696276039695e-05],
            'hinf': [0.6645120606535466, 0.6645120606535466, 0.6645120606535466],
            'mtau': [0.552075787550371, 0.552075787550371, 0.552075787550371],
            'htau': [194.2550703259956, 194.2550703259956, 194.2550703259956],
            'm': [2.290696276039695e-05, 2.290696276039695e-05, 2.290696276039695e-05],
            'h': [0.6645120606535466, 0.6645120606535466, 0.6645120606535466]},
        'it2': {
            'gcabar': [0.0, 0.0, 0.0],
            'icaT': [-0.0, -0.0, -0.0],
            'gcaT': [0.0, 0.0, 0.0],
            'minf': [0.0330378526075962, 0.0330378526075962, 0.0330378526075962],
            'hinf': [0.7306756725427105, 0.7306756725427105, 0.7306756725427105],
            'mtau': [0.0, 0.0, 0.0],
            'htau': [0.0, 0.0, 0.0],
            'm': [0.0330378526075962, 0.0330378526075962, 0.0330378526075962],
            'h': [0.7306756725427105, 0.7306756725427105, 0.7306756725427105]},
        'charge_': {
            'vmin': [1000000.0, 1000000.0, 1000000.0],
            'tmin': [0.0, 0.0, 0.0],
            'vmax': [-1000000.0, -1000000.0, -1000000.0],
            'tmax': [0.0, 0.0, 0.0],
            'na_ch': [0.0, 0.0, 0.0],
            'na_ch_overl': [0.0, 0.0, 0.0],
            'overl': [0.0, 0.0, 0.0],
            'na_ch_excess_ratio': [0.0, 0.0, 0.0],
            'na_ch_before_peak': [0.0, 0.0, 0.0],
            'na_ch_after_peak': [0.0, 0.0, 0.0],
            'peak_reached': [0.0, 0.0, 0.0],
            'peak_time': [0.0, 0.0, 0.0]},
        'ih': {
            'gbar': [0.00015, 0.00015, 0.00015],
            'Ih': [-0.00025842232724882213, -0.00025842232724882213, -0.00025842232724882213],
            'h': [0.04922330042834708, 0.04922330042834708, 0.04922330042834708]},
        'kca': {
            'gbar': [0.1, 0.1, 0.1],
            'ikca': [1.1404001336086272e-07, 1.1404001336086272e-07, 1.1404001336086272e-07],
            'gkca': [6.335556297825706e-05, 6.335556297825706e-05, 6.335556297825706e-05],
            'ninf': [0.0006335556297825706, 0.0006335556297825706, 0.0006335556297825706],
            'ntau': [0.17380285989047262, 0.17380285989047262, 0.17380285989047262],
            'n': [0.0006335556297825706, 0.0006335556297825706, 0.0006335556297825706]},
        'Kv1': {
            'gbar': [416.66666666666663, 1050.0, 1683.3333333333335],
            'ikv1': [0.0002598676213102845, 0.000654866405701917, 0.0010498651900935495],
            'gkv1': [0.14437090072793582, 0.3638146698343983, 0.5832584389408608],
            'n': [0.3777199681914274, 0.3777199681914274, 0.3777199681914274],
            'h1': [0.8362407987671049, 0.8362407987671049, 0.8362407987671049],
            'h2': [0.836240798767105, 0.836240798767105, 0.836240798767105]},
        'Kv7': {
            'gbar': [1.0, 2.0, 5.333333333333334],
            'ik': [3.526544542905438e-05, 7.053089085810876e-05, 0.00018808237562162344],
            'm': [0.019591914127252436, 0.019591914127252436, 0.019591914127252436]},
        'na': {
            'gbar': [4249.999999999999, 1000.0, 1000.0],
            'a1_0': [45.8498, 45.8498, 45.8498],
            'a1_1': [0.0239354, 0.0239354, 0.0239354],
            'b1_0': [0.0144095, 0.0144095, 0.0144095],
            'b1_1': [0.0884761, 0.0884761, 0.0884761],
            'a2_0': [19.8084, 19.8084, 19.8084],
            'a2_1': [0.0221771, 0.0221771, 0.0221771],
            'b2_0': [0.565017, 0.565017, 0.565017],
            'b2_1': [0.061084, 0.061084, 0.061084],
            'a3_0': [71.8119, 71.8119, 71.8119],
            'a3_1': [0.0659379, 0.0659379, 0.0659379],
            'b3_0': [0.753118, 0.753118, 0.753118],
            'b3_1': [0.0364798, 0.0364798, 0.0364798],
            'bh_0': [2.83015, 2.83015, 2.83015],
            'bh_1': [0.289005, 0.289005, 0.289005],
            'bh_2': [0.069603, 0.069603, 0.069603],
            'ah_0': [0.575782, 0.575782, 0.575782],
            'ah_1': [162.841, 162.841, 162.841],
            'ah_2': [0.0268011, 0.0268011, 0.0268011],
            'vShift_inact_local': [0.0, 0.0, 0.0],
            'gna': [0.07990898429608562, 0.01880211395202015, 0.01880211395202015],
            'ina_ina': [-0.001078771287997156, -0.000253828538352272, -0.000253828538352272],
            'c1': [0.738230846482624, 0.738230846482624, 0.738230846482624],
            'c2': [0.09614607838807425, 0.09614607838807425, 0.09614607838807425],
            'c3': [0.0019714959702729806, 0.0019714959702729806, 0.0019714959702729806],
            'i1': [0.1444326848287274, 0.1444326848287274, 0.1444326848287274],
            'i2': [0.018810696278093966, 0.018810696278093966, 0.018810696278093966],
            'i3': [0.00038571736345875777, 0.00038571736345875777, 0.00038571736345875777],
            'i4': [3.6785747965556776e-06, 3.6785747965556776e-06, 3.6785747965556776e-06],
            'o': [1.880211395202015e-05, 1.880211395202015e-05, 1.880211395202015e-05]},
        'nax': {
            'gbar': [2916.6666666666665, 7000.0, 7000.0],
            'a1_0': [62.6477, 62.6477, 62.6477],
            'a1_1': [0.0116055, 0.0116055, 0.0116055],
            'b1_0': [0.00193691, 0.00193691, 0.00193691],
            'b1_1': [0.137719, 0.137719, 0.137719],
            'a2_0': [34.7828, 34.7828, 34.7828],
            'a2_1': [0.0299559, 0.0299559, 0.0299559],
            'b2_0': [0.0957515, 0.0957515, 0.0957515],
            'b2_1': [0.0928114, 0.0928114, 0.0928114],
            'a3_0': [76.6983, 76.6983, 76.6983],
            'a3_1': [0.0537432, 0.0537432, 0.0537432],
            'b3_0': [1.24879, 1.24879, 1.24879],
            'b3_1': [0.0311504, 0.0311504, 0.0311504],
            'bh_0': [3.57365, 3.57365, 3.57365],
            'bh_1': [0.193321, 0.193321, 0.193321],
            'bh_2': [0.0749654, 0.0749654, 0.0749654],
            'ah_0': [6.88267, 6.88267, 6.88267],
            'ah_1': [4654.02, 4654.02, 4654.02],
            'ah_2': [0.0295833, 0.0295833, 0.0295833],
            'vShift_inact_local': [0.0, 0.0, 0.0],
            'gna': [0.022072989241270848, 0.05297517417905004, 0.05297517417905004],
            'ina_inax': [-0.00029798535475715645, -0.0007151648514171756, -0.0007151648514171756],
            'c1': [0.6964751920509079, 0.6964751920509079, 0.6964751920509079],
            'c2': [0.03826034568008319, 0.03826034568008319, 0.03826034568008319],
            'c3': [0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904],
            'i1': [0.25111323633392846, 0.25111323633392846, 0.25111323633392846],
            'i2': [0.013794718514653697, 0.013794718514653697, 0.013794718514653697],
            'i3': [9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05],
            'i4': [2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06],
            'o': [7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06]}},
    'ions': {
        'na': {
            'ena': [55.0, 55.0, 55.0],
            'nai': [10.0, 10.0, 10.0],
            'nao': [140.0, 140.0, 140.0],
            'ina': [-0.0013767566427543123, -0.0009689933897694476, -0.0009689933897694476],
            'dina_dv_': [1.0198197353814605e-05, 7.1777288131679405e-06, 7.1777288131679405e-06]},
        'k': {
            'ek': [-98.0, -98.0, -98.0],
            'ki': [54.4, 54.4, 54.4],
            'ko': [2.5, 2.5, 2.5],
            'ik': [0.0002952471067526998, 0.0007255113365733866, 0.0012380616057285339],
            'dik_dv_': [1.6402617041884818e-05, 4.030618536544391e-05, 6.878120031864483e-05]},
        'ca': {
            'eca': [140.0, 140.0, 140.0],
            'cai': [0.0001, 0.0001, 0.0001],
            'cao': [2.0, 2.0, 2.0],
            'ica': [0.0, 0.0, 0.0],
            'dica_dv_': [0.0, 0.0, 0.0]}},
    'morphology': {
        'L': 63.16390529225146,
        'diam': [3.0358295510910756, 2.0482895634196017, 1.7356778905245045],
        'parent': "soma(0.5)",
        'trueparent': "soma(0.5)"},
    'nseg': 3,
    'Ra': 80.0,
    'cm': [1.0, 1.0, 1.0],
    'regions': set(),
    'species': set(),
    'name': 'axon[0]',
    'hoc_internal_name': '__nrnsec_0x3b2f030',
    'cell': None}

node_dict = {'point_processes': {},
             'density_mechs': {
                 'pas': {'g': [6.666666666666667e-05],
                        'e': [-85.0],
                        'i': [0.0003333333333333334]},
                 'charge_': {'vmin': [1000000.0],
                            'tmin': [0.0],
                            'vmax': [-1000000.0],
                            'tmax': [0.0],
                            'na_ch': [0.0],
                            'na_ch_overl': [0.0],
                            'overl': [0.0],
                            'na_ch_excess_ratio': [0.0],
                            'na_ch_before_peak': [0.0],
                            'na_ch_after_peak': [0.0],
                            'peak_reached': [0.0],
                            'peak_time': [0.0]},
                 'ih': {'gbar': [0.00015],
                       'Ih': [-0.00025842232724882213],
                       'h': [0.04922330042834708]},
                 'Kv1': {'gbar': [2000.0],
                        'ikv1': [0.0012473645822893655],
                        'gkv1': [0.692980323494092],
                        'n': [0.3777199681914274],
                        'h1': [0.8362407987671049],
                        'h2': [0.836240798767105]},
                 'Kv7': {'gbar': [7.0],
                        'ik': [0.0002468581180033807],
                        'm': [0.019591914127252436]},
                 'nax': {'gbar': [7000.0],
                         'a1_0': [62.6477],
                         'a1_1': [0.0116055],
                         'b1_0': [0.00193691],
                         'b1_1': [0.137719],
                         'a2_0': [34.7828],
                         'a2_1': [0.0299559],
                         'b2_0': [0.0957515],
                         'b2_1': [0.0928114],
                         'a3_0': [76.6983],
                         'a3_1': [0.0537432],
                         'b3_0': [1.24879],
                         'b3_1': [0.0311504],
                         'bh_0': [3.57365],
                         'bh_1': [0.193321],
                         'bh_2': [0.0749654],
                         'ah_0': [6.88267],
                         'ah_1': [4654.02],
                         'ah_2': [0.0295833],
                         'vShift_inact_local': [0.0],
                         'gna': [0.05297517417905004],
                         'ina_inax': [-0.0007151648514171756],
                         'c1': [0.6964751920509079],
                         'c2': [0.03826034568008319],
                         'c3': [0.0002544642101803904],
                         'i1': [0.25111323633392846],
                         'i2': [0.013794718514653697],
                         'i3': [9.17467439482056e-05],
                         'i4': [2.7285842726426233e-06],
                         'o': [7.567882025578577e-06]}},
             'ions': {'na': {'ena': [55.0],
                             'nai': [10.0],
                             'nao': [140.0],
                             'ina': [-0.0007151648514171756],
                             'dina_dv_': [5.297517418007339e-06]},
                     'k': {'ek': [-98.0],
                           'ki': [54.4],
                           'ko': [2.5],
                           'ik': [0.0014942227002927462],
                           'dik_dv_': [8.301237223892711e-05]}},
             'morphology': {'L': 1.0000235332259415,
                            'diam': [1.2999999523162842],
                            'parent': "my[9](1)",
                            'trueparent': "my[9](1)"},
             'nseg': 1,
             'Ra': 80.0,
             'cm': [1.0],
             'regions': set(),
             'species': set(),
             'name': 'node[9]',
             'hoc_internal_name': '__nrnsec_0x3b32270',
             'cell': None}

myelin_dict = {
    'point_processes': {},
    'density_mechs': {
        'pas': {
            'g': [6.060606060606061e-06],
            'e': [-85.0],
            'i': [3.0303030303030306e-05]},
        'charge_': {
            'vmin': [1000000.0],
            'tmin': [0.0],
            'vmax': [-1000000.0],
            'tmax': [0.0],
            'na_ch': [0.0],
            'na_ch_overl': [0.0],
            'overl': [0.0],
            'na_ch_excess_ratio': [0.0],
            'na_ch_before_peak': [0.0],
            'na_ch_after_peak': [0.0],
            'peak_reached': [0.0],
            'peak_time': [0.0]},
        'ih': {
            'gbar': [0.00015],
            'Ih': [-0.00025842232724882213],
            'h': [0.04922330042834708]},
        'Kv1': {
            'gbar': [20.0],
            'ikv1': [1.2473645822893657e-05],
            'gkv1': [0.00692980323494092],
            'n': [0.3777199681914274],
            'h1': [0.8362407987671049],
            'h2': [0.836240798767105]},
        'Kv7': {
            'gbar': [1.0],
            'ik': [3.526544542905438e-05],
            'm': [0.019591914127252436]},
        'nax': {
            'gbar': [40.0],
            'a1_0': [62.6477],
            'a1_1': [0.0116055],
            'b1_0': [0.00193691],
            'b1_1': [0.137719],
            'a2_0': [34.7828],
            'a2_1': [0.0299559],
            'b2_0': [0.0957515],
            'b2_1': [0.0928114],
            'a3_0': [76.6983],
            'a3_1': [0.0537432],
            'b3_0': [1.24879],
            'b3_1': [0.0311504],
            'bh_0': [3.57365],
            'bh_1': [0.193321],
            'bh_2': [0.0749654],
            'ah_0': [6.88267],
            'ah_1': [4654.02],
            'ah_2': [0.0295833],
            'vShift_inact_local': [0.0],
            'gna': [0.0003027152810231431],
            'ina_inax': [-4.086656293812432e-06],
            'c1': [0.6964751920509079],
            'c2': [0.03826034568008319],
            'c3': [0.0002544642101803904],
            'i1': [0.25111323633392846],
            'i2': [0.013794718514653697],
            'i3': [9.17467439482056e-05],
            'i4': [2.7285842726426233e-06],
            'o': [7.567882025578577e-06]}},
    'ions': {
        'na': {
            'ena': [55.0],
            'nai': [10.0],
            'nao': [140.0],
            'ina': [-4.086656293812432e-06],
            'dina_dv_': [3.02715281023957e-08]},
        'k': {
            'ek': [-98.0],
            'ki': [54.4],
            'ko': [2.5],
            'ik': [4.773909125194804e-05],
            'dik_dv_': [2.6521717362328067e-06]}},
    'morphology': {
        'L': 54.527929822690695,
        'diam': [1.340000033378601],
        'parent': "node[8](1)",
        'trueparent': "node[8](1)"},
    'nseg': 1,
    'Ra': 80.0,
    'cm': [0.09090909090909091],
    'regions': set(),
    'species': set(),
    'name': 'my[9]',
    'hoc_internal_name': '__nrnsec_0x3b31eb0',
    'cell': None}

axon_dict = {
    'point_processes': {},
    'density_mechs': {
        'pas': {
            'g': [6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05,
                  6.666666666666667e-05, 6.666666666666667e-05, 6.666666666666667e-05],
            'e': [-85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0, -85.0,
                  -85.0, -85.0, -85.0, -85.0, -85.0, -85.0],
            'i': [0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334,
                  0.0003333333333333334, 0.0003333333333333334, 0.0003333333333333334]},
        'charge_': {'vmin': [1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0, 1000000.0, 1000000.0,
                             1000000.0, 1000000.0, 1000000.0],
                    'tmin': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0],
                    'vmax': [-1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0, -1000000.0, -1000000.0,
                             -1000000.0, -1000000.0, -1000000.0],
                    'tmax': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                             0.0, 0.0, 0.0],
                    'na_ch': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0],
                    'na_ch_overl': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.0, 0.0],
                    'overl': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                              0.0, 0.0, 0.0],
                    'na_ch_excess_ratio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                           0.0, 0.0, 0.0],
                    'na_ch_before_peak': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                          0.0, 0.0, 0.0],
                    'na_ch_after_peak': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                         0.0, 0.0, 0.0],
                    'peak_reached': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                     0.0, 0.0],
                    'peak_time': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                  0.0, 0.0, 0.0]},
        'ih': {
            'gbar': [0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005,
                     0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005],
            'Ih': [-0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738,
                   -0.0008614077574960738, -0.0008614077574960738, -0.0008614077574960738],
            'h': [0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708, 0.04922330042834708,
                  0.04922330042834708, 0.04922330042834708, 0.04922330042834708]},
        'Kv1': {
            'gbar': [400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
                     400.0, 400.0],
            'ikv1': [0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                     0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317],
            'gkv1': [0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184, 0.1385960646988184,
                     0.1385960646988184, 0.1385960646988184, 0.1385960646988184],
            'n': [0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274, 0.3777199681914274,
                  0.3777199681914274, 0.3777199681914274, 0.3777199681914274],
            'h1': [0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049, 0.8362407987671049,
                   0.8362407987671049, 0.8362407987671049, 0.8362407987671049],
            'h2': [0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105, 0.836240798767105,
                   0.836240798767105, 0.836240798767105, 0.836240798767105]},
        'nax': {
            'gbar': [500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0,
                     500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0,
                     500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0,
                     500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0,
                     500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0,
                     500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0,
                     500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0,
                     500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0,
                     500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0,
                     500.0, 500.0, 500.0, 500.0, 500.0, 500.0],
            'a1_0': [62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477, 62.6477,
                     62.6477, 62.6477],
            'a1_1': [0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055,
                     0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055, 0.0116055],
            'b1_0': [0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691, 0.00193691,
                     0.00193691, 0.00193691, 0.00193691],
            'b1_1': [0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719, 0.137719,
                     0.137719, 0.137719, 0.137719],
            'a2_0': [34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828, 34.7828,
                     34.7828, 34.7828],
            'a2_1': [0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559,
                     0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559, 0.0299559],
            'b2_0': [0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515,
                     0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515, 0.0957515],
            'b2_1': [0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114,
                     0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114, 0.0928114],
            'a3_0': [76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983, 76.6983,
                     76.6983, 76.6983],
            'a3_1': [0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432,
                     0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432, 0.0537432],
            'b3_0': [1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879, 1.24879,
                     1.24879, 1.24879],
            'b3_1': [0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504,
                     0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504, 0.0311504],
            'bh_0': [3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365, 3.57365,
                     3.57365, 3.57365],
            'bh_1': [0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321, 0.193321,
                     0.193321, 0.193321, 0.193321],
            'bh_2': [0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654,
                     0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654, 0.0749654],
            'ah_0': [6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267, 6.88267,
                     6.88267, 6.88267],
            'ah_1': [4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02, 4654.02,
                     4654.02, 4654.02],
            'ah_2': [0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833,
                     0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833, 0.0295833],
            'vShift_inact_local': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0],
            'gna': [0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886,
                    0.0037839410127892886, 0.0037839410127892886, 0.0037839410127892886],
            'ina_inax': [-5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                         -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05],
            'c1': [0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079, 0.6964751920509079,
                   0.6964751920509079, 0.6964751920509079, 0.6964751920509079],
            'c2': [0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319, 0.03826034568008319,
                   0.03826034568008319, 0.03826034568008319, 0.03826034568008319],
            'c3': [0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904,
                   0.0002544642101803904, 0.0002544642101803904, 0.0002544642101803904],
            'i1': [0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846, 0.25111323633392846,
                   0.25111323633392846, 0.25111323633392846, 0.25111323633392846],
            'i2': [0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697, 0.013794718514653697,
                   0.013794718514653697, 0.013794718514653697, 0.013794718514653697],
            'i3': [9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05,
                   9.17467439482056e-05, 9.17467439482056e-05, 9.17467439482056e-05],
            'i4': [2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06,
                   2.7285842726426233e-06, 2.7285842726426233e-06, 2.7285842726426233e-06],
            'o': [7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06,
                  7.567882025578577e-06, 7.567882025578577e-06, 7.567882025578577e-06]}},
    'ions': {
        'na': {
            'ena': [55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0,
                    55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0,
                    55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0,
                    55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0,
                    55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0,
                    55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0,
                    55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0],
            'nai': [10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0,
                    10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0,
                    10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0,
                    10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0,
                    10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0,
                    10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0,
                    10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0],
            'nao': [140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0,
                    140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0,
                    140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0,
                    140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0,
                    140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0,
                    140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0,
                    140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0,
                    140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0, 140.0],
            'ina': [-5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05,
                    -5.10832036726554e-05, -5.10832036726554e-05, -5.10832036726554e-05],
            'dina_dv_': [3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07,
                         3.7839410128333436e-07, 3.7839410128333436e-07, 3.7839410128333436e-07]},
        'k': {
            'ek': [-98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0,
                   -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0,
                   -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0,
                   -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0,
                   -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0,
                   -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0,
                   -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0,
                   -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0, -98.0],
            'ki': [54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4,
                   54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4,
                   54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4,
                   54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4,
                   54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4,
                   54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4,
                   54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4, 54.4],
            'ko': [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,
                   2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,
                   2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,
                   2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,
                   2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,
                   2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5],
            'ik': [0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317,
                   0.00024947291645787317, 0.00024947291645787317, 0.00024947291645787317],
            'dik_dv_': [1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05,
                        1.3859606469923073e-05, 1.3859606469923073e-05, 1.3859606469923073e-05]}},
    'morphology': {
        'L': 1300,
        'diam': [0.699999988079071, 0.6999999880790713, 0.6999999880790709, 0.699999988079071, 0.699999988079071, 0.699999988079071,
                 0.6999999880790696, 0.6999999880790723, 0.6999999880790724, 0.6999999880790696, 0.6543198790877092, 0.5799999833107004,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833107027, 0.5799999833107027,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106984, 0.5799999833107027, 0.5799999833107027, 0.5799999833106982,
                 0.5799999833106891, 0.5799999833106982, 0.5799999833106984, 0.5799999833107072, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833107072, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833107072, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833107163, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833107164,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833107163, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106981,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833106982, 0.5799999833107345, 0.5799999833106982,
                 0.5799999833106982, 0.5799999833106982, 0.5799999833106982],
          'parent': "axon[6](1)",
        'trueparent': "axon[6](1)"},
    'nseg': 123,
    'Ra': 80.0,
    'cm': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
           1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
           1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
           1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
           1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
    'regions': set(),
    'species': set(),
    'name': 'axon[8]',
    'hoc_internal_name': '__nrnsec_0x1cbc1e0',
    'cell': None}


def make_sec_from_dict(basename, sec_type_counter, param_dict,
                       startpos, endpos, ):

    secname = "{}[{}]".format(basename, sec_type_counter[basename])

    sec = h.Section(name=secname)

    sec_type_counter[basename] += 1
    sec.nseg = param_dict["nseg"]
    sec.Ra = param_dict["Ra"]
    sec.L = param_dict['morphology']["L"]

    for nseg, seg in enumerate(sec):
        seg.cm = param_dict["cm"][nseg]
        diam = param_dict['morphology']["diam"][nseg]
        seg.diam = diam

    if "pts3d" in param_dict['morphology']:
        for pt3d in param_dict['morphology']["pts3d"]:
            sec.pt3dadd(pt3d[0], pt3d[1], pt3d[2], pt3d[3])
    else:
        num_pts = len(param_dict['morphology']["diam"])
        if num_pts == 1:
            sec.pt3dadd(startpos[0], startpos[1], startpos[2], param_dict['morphology']["diam"][0])
            sec.pt3dadd(endpos[0], endpos[1], endpos[2], param_dict['morphology']["diam"][0])

        else:
            for pt_idx in range(num_pts):
                pos = startpos + pt_idx / (num_pts - 1) * (endpos - startpos)
                #print(pos, param_dict['morphology']["diam"][pt_idx])
                sec.pt3dadd(pos[0], pos[1], pos[2], param_dict['morphology']["diam"][pt_idx])
                #print(pos[0], pos[1], pos[2], param_dict['morphology']["diam"][pt_idx])
        # sec.pt3dadd(startpos[0], startpos[1], startpos[2], param_dict['morphology']["diam"][0])
        # sec.pt3dadd(endpos[0], endpos[1], endpos[2], param_dict['morphology']["diam"][-1])

    #print("param", param_dict['morphology']["L"], sec.L, len(param_dict['morphology']["diam"]))
    for mech in param_dict["density_mechs"]:
        sec.insert(mech)
        for param in param_dict["density_mechs"][mech]:
            for nseg, seg in enumerate(sec):
                value = param_dict["density_mechs"][mech][param][nseg]
                cmd = "seg.{}_{} = {}".format(param, mech, value)
                exec(cmd)

    for ion in param_dict["ions"]:
        for param in param_dict["ions"][ion]:
            for nseg, seg in enumerate(sec):
                value = param_dict["ions"][ion][param][nseg]
                cmd = "seg.{} = {}".format(param, value)
                exec(cmd)

    if h.ismembrane("ca_ion", sec=sec):
        sec.eca = 140
        h.ion_style("ca_ion",0,1,0,0,0)
        h.vshift_ca = 8

    sec.ena = 55
    sec.ek = -98

    return sec, sec_type_counter


def test_axon_extraction(dt, tstop):

    model_folder = join(mechanisms_folder)

    neuron.load_mechanisms(model_folder)

    # Define cell parameters
    cell_parameters = {          # various cell parameters,
        'morphology' : join(model_folder, '28_04_10_num19.hoc'),
        'v_init' : -80.,    # initial crossmembrane potential
        # 'e_pas' : -65.,     # reversal potential passive mechs
        'passive' : False,   # switch on passive mechs
        'nsegs_method' : 'lambda_f',
        'lambda_f' : 500.,
        'dt' : dt,   # [ms] dt's should be in powers of 2 for both,
        'tstart' : 0,    # start time of simulation, recorders start at t=0
        'tstop' : tstop,   # stop simulation at 200 ms. These can be overridden
                            # by setting these arguments i cell.simulation()
        "extracellular": False,
        "pt3d": False,
        'custom_code': [join(model_folder, 'Cell parameters.hoc'),
                        join(model_folder, 'charge_only_unmyelinated.hoc')]
    }

    cell = LFPy.Cell(**cell_parameters)
    # cell = scale_soma_diameter(cell, cell_parameters, 10)
    cell.set_rotation(x=np.pi/2, y=-0.1)
    #cell.set_pos(z=-np.max(cell.z) - 20)
    return cell


def get_sec_endpoint(sec):
    return sec.x3d(sec.n3d() - 1), sec.y3d(sec.n3d() - 1), sec.z3d(sec.n3d() - 1)


def make_myelinated_branch(parent_sec, parent_axis,
                           my_length, node_length, sec_list, split_angle_fraction,
                           sec_type_counter):

    parent_end = get_sec_endpoint(parent_sec)
    # parent_name = parent_sec.name()
    #parent_i = int(parent_name.split("[")[-1][:-1])

    # making branch # 1
    x_frac = np.random.random() # np.random.choice([0, 1])#
    y_frac = 1 - x_frac
    x_frac *= split_angle_fraction
    y_frac *= split_angle_fraction

    axon_axis_ = np.array([-x_frac, -y_frac, 0]) + parent_axis
    axon_axis_ = axon_axis_ / np.sqrt(np.sum(axon_axis_**2))
    end_pos = parent_end + axon_axis_ * my_length
    # print(start_pos, end_pos)
    sec_myelin_left, sec_type_counter = make_sec_from_dict("my", sec_type_counter, myelin_dict, parent_end, end_pos)

    sec_myelin_left.connect(parent_sec(1), 0)
    sec_list.append(sec_myelin_left)

    start_pos = end_pos.copy()
    end_pos = start_pos + parent_axis * node_length
    sec_node_left, sec_type_counter = make_sec_from_dict("node", sec_type_counter, node_dict, start_pos, end_pos)

    sec_node_left.connect(sec_myelin_left(1), 0)
    sec_list.append(sec_node_left)

    # making branch # 2
    axon_axis_ = np.array([x_frac, y_frac, 0]) + parent_axis
    axon_axis_ = axon_axis_ / np.sqrt(np.sum(axon_axis_**2))
    end_pos = parent_end + axon_axis_ * my_length
    # print(branc_point_start, end_pos)
    sec_myelin_right, sec_type_counter = make_sec_from_dict("my", sec_type_counter, myelin_dict, parent_end, end_pos)

    sec_myelin_right.connect(parent_sec(1), 0)
    sec_list.append(sec_myelin_right)

    start_pos = end_pos.copy()
    end_pos = start_pos + parent_axis * node_length
    sec_node_right, sec_type_counter = make_sec_from_dict("node", sec_type_counter, node_dict, start_pos, end_pos)

    sec_node_right.connect(sec_myelin_right(1), 0)
    sec_list.append(sec_node_right)

    return sec_list, sec_node_left, sec_node_right, sec_type_counter


def make_unmyelinated_branch(parent_sec, parent_axis,
                           axon_length, sec_list, split_angle_fraction,
                           sec_type_counter):

    parent_end = get_sec_endpoint(parent_sec)

    # making branch # 1
    x_frac = np.random.random() # np.random.choice([0, 1])#
    y_frac = 1 - x_frac
    x_frac *= split_angle_fraction
    y_frac *= split_angle_fraction

    axon_axis_ = np.array([-x_frac, -y_frac, 0]) + parent_axis
    axon_axis_ = axon_axis_ / np.sqrt(np.sum(axon_axis_**2))
    end_pos = parent_end + axon_axis_ * axon_length
    # print(start_pos, end_pos)
    sec_axon_left, sec_type_counter = make_sec_from_dict("axon", sec_type_counter, axon_dict, parent_end, end_pos)

    sec_axon_left.connect(parent_sec(1), 0)
    sec_list.append(sec_axon_left)

    # making branch # 2
    axon_axis_ = np.array([x_frac, y_frac, 0]) + parent_axis
    axon_axis_ = axon_axis_ / np.sqrt(np.sum(axon_axis_**2))
    end_pos = parent_end + axon_axis_ * axon_length

    sec_axon_right, sec_type_counter = make_sec_from_dict("axon", sec_type_counter, axon_dict, parent_end, end_pos)

    sec_axon_right.connect(parent_sec(1), 0)
    sec_list.append(sec_axon_right)

    return sec_list, sec_axon_left, sec_axon_right, sec_type_counter


def return_constructed_myelinated_axon(dt, tstop, num_splits, split_angle_fraction, axon_diameter=0.3):
    import LFPy
    neuron.load_mechanisms(mechanisms_folder)

    sec_list = []
    neuron.h.celsius = 33
    h.q10_na = 3
    h.q10h_na = 3
    h.vShift_na = 10
    h.vShift_inact_na = 10

    h.vShift_nax = 10
    h.vShift_inact_nax = 10
    h.q10_nax = 3.0
    h.q10h_nax = 3.0

    h.vShift_Kv1 = 10
    h.vShift_inact_Kv1 = -15

    h.vh1_it2 = 56
    h.vh2_it2 = 415
    h.ah_it2 = 30
    h.v12m_it2 = 45
    h.v12h_it2 = 65
    h.am_it2 = 3
    h.vshift_it2 = 10
    h.vm1_it2 = 50
    h.vm2_it2 = 125

    h.caix_kca = 0.7  	#// Ca-sensitivity of Kca channel
    h.Ra_kca = 1  	#// Activation rate Kca
    h.Rb_kca = 2.5	#// inactivation rate Kca, important !
    h.taur_cad = 80    	#// Calcium extrusion rate, in ms
    h.eh_ih = -45

    my_length = 20
    myelin_dict['morphology']["L"] = my_length
    node_length = node_dict['morphology']["L"]

    #node_nsegs = node_dict["nseg"]
    #my_nsegs = myelin_dict["nseg"]
    #node_diam = node_dict["morphology"]["diam"]
    #my_diam = myelin_dict["morphology"]["diam"]
    if axon_diameter is not None:
        node_dict["morphology"]["diam"] = np.array(node_dict["morphology"]["diam"]) * 0.0 + axon_diameter
        myelin_dict["morphology"]["diam"] = np.array(myelin_dict["morphology"]["diam"]) * 0.0 + axon_diameter

    axon_axis = np.array([0, 0, 1])

    sec_type_counter = {"soma": 0,
                        "axon": 0,
                        "my": 0,
                        "node": 0
                        }
    # Make soma
    #start_pos = np.array([0, 0, -soma_dict['morphology']["L"] / 2])
    #end_pos = np.array([0, 0, soma_dict['morphology']["L"] / 2])
    #soma, sec_type_counter = make_sec_from_dict("soma", sec_type_counter, soma_dict, start_pos, end_pos)
    # sec_type_counter["soma"]
    #sec_list.append(soma)

    # Make AIS
    #start_pos = end_pos.copy()
    #end_pos = start_pos + axon_axis * ais_dict['morphology']["L"]
    #axon, sec_type_counter = make_sec_from_dict("axon", sec_type_counter, ais_dict, start_pos, end_pos)
    #start_pos = end_pos.copy()
    #sec_list.append(axon)
    #axon.connect(soma(1), 0)


    start_pos = np.array([0, 0, 0])
    for i in range(40):
        #if i == 0:
        #    my_length = 50
        #else:
        #my_length = 50
        end_pos = start_pos + axon_axis * my_length
        sec_myelin, sec_type_counter = make_sec_from_dict("my", sec_type_counter,
                                                          myelin_dict, start_pos, end_pos)
        if i == 0:
            #sec_myelin.connect(axon(1), 0)
            pass
        else:
            sec_myelin.connect(sec_list[-1](1), 0)
        sec_list.append(sec_myelin)

        start_pos = end_pos.copy()
        end_pos = start_pos + axon_axis * node_length
        sec_node, sec_type_counter = make_sec_from_dict("node", sec_type_counter,
                                                        node_dict, start_pos, end_pos)

        sec_node.connect(sec_myelin(1), 0)

        start_pos = end_pos.copy()
        sec_list.append(sec_node)

    parent_sec = sec_list[-1]

    if num_splits > 0:
        # split_angle_fraction = 0.5 # 2
        sec_list, sec_node_left, sec_node_right, sec_type_counter = make_myelinated_branch(parent_sec,
                                                                                           axon_axis,
                                                                                           my_length,
                                                                                           node_length,
                                                                                           sec_list,
                                                                                           split_angle_fraction,
                                                                                           sec_type_counter)

    if num_splits > 1:
        # split_angle_fraction = 0.5#0.5

        sec_list, sec_node_left_1, sec_node_right_1, sec_type_counter = make_myelinated_branch(sec_node_left,
                                                                                               axon_axis,
                                                                                               my_length,
                                                                                               node_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)

        sec_list, sec_node_left_2, sec_node_right_2, sec_type_counter = make_myelinated_branch(sec_node_right,
                                                                                               axon_axis,
                                                                                               my_length,
                                                                                               node_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)

    if num_splits > 2:
        # split_angle_fraction = 0.5#0.25
        sec_list, sec_node_left_3, sec_node_right_3, sec_type_counter = make_myelinated_branch(sec_node_left_1,
                                                                                               axon_axis,
                                                                                               my_length,
                                                                                               node_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)

        sec_list, sec_node_left_4, sec_node_right_4, sec_type_counter = make_myelinated_branch(sec_node_right_1,
                                                                                               axon_axis,
                                                                                               my_length,
                                                                                               node_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)

        sec_list, sec_node_left_5, sec_node_right_5, sec_type_counter = make_myelinated_branch(sec_node_left_2,
                                                                                               axon_axis,
                                                                                               my_length,
                                                                                               node_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)

        sec_list, sec_node_left_6, sec_node_right_6, sec_type_counter = make_myelinated_branch(sec_node_right_2,
                                                                                               axon_axis,
                                                                                               my_length,
                                                                                               node_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)
    if num_splits > 3:
        # split_angle_fraction = 0.5#0.1
        sec_list, sec_node_left_7, sec_node_right_7, sec_type_counter = make_myelinated_branch(sec_node_left_3,
                                                                                               axon_axis,
                                                                                               my_length,
                                                                                               node_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)

        sec_list, sec_node_left_8, sec_node_right_8, sec_type_counter = make_myelinated_branch(sec_node_right_3,
                                                                                               axon_axis,
                                                                                               my_length,
                                                                                               node_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)

        sec_list, sec_node_left_9, sec_node_right_9, sec_type_counter = make_myelinated_branch(sec_node_left_4,
                                                                                               axon_axis,
                                                                                               my_length,
                                                                                               node_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)

        sec_list, sec_node_left_10, sec_node_right_10, sec_type_counter = make_myelinated_branch(sec_node_right_4,
                                                                                                 axon_axis,
                                                                                                 my_length,
                                                                                                 node_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction,
                                                                                                 sec_type_counter)

        sec_list, sec_node_left_11, sec_node_right_11, sec_type_counter = make_myelinated_branch(sec_node_left_5,
                                                                                                 axon_axis,
                                                                                                 my_length,
                                                                                                 node_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction,
                                                                                                 sec_type_counter)

        sec_list, sec_node_left_12, sec_node_right_12, sec_type_counter = make_myelinated_branch(sec_node_right_5,
                                                                                                 axon_axis,
                                                                                                 my_length,
                                                                                                 node_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction,
                                                                                                 sec_type_counter)

        sec_list, sec_node_left_13, sec_node_right_13, sec_type_counter = make_myelinated_branch(sec_node_left_6,
                                                                                                 axon_axis,
                                                                                                 my_length,
                                                                                                 node_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction,
                                                                                                 sec_type_counter)

        sec_list, sec_node_left_14, sec_node_right_14, sec_type_counter = make_myelinated_branch(sec_node_right_6,
                                                                                                 axon_axis,
                                                                                                 my_length,
                                                                                                 node_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction,
                                                                                                 sec_type_counter)
    # neuron.h.define_shape()
    allsecs = h.SectionList(sec_list)

    #for sec in allsecs:
    #    print(sec.name(), sec.L)

    cell_params = {
        'v_init': -80.,
        'passive': False,
        'nsegs_method': "lambda_f",
        'lambda_f': 500.,
        'dt': dt,   # [ms] dt's should be in powers of 2 for both,
        'tstart': -1,    # start time of simulation, recorders start at t=0
        'tstop': tstop,
        "extracellular": False,
        "pt3d": False,
        "delete_sections": False}

    cell = LFPy.Cell(morphology=allsecs, **cell_params)
    #cell.set_rotation(y=np.pi)
    cell.set_pos(z=-np.max(cell.z) - 0)
    cell.sec_list = sec_list

    return cell


def return_constructed_unmyelinated_axon(dt, tstop, num_splits, split_angle_fraction, axon_diameter=0.3):
    import LFPy
    neuron.load_mechanisms(mechanisms_folder)

    # Parameters are from Hallermann axon model
    sec_list = []
    neuron.h.celsius = 33
    h.q10_na = 3
    h.q10h_na = 3
    h.vShift_na = 10
    h.vShift_inact_na = 10

    h.vShift_nax = 10
    h.vShift_inact_nax = 10
    h.q10_nax = 3.0
    h.q10h_nax = 3.0

    h.vShift_Kv1 = 10
    h.vShift_inact_Kv1 = -15

    h.vh1_it2 = 56
    h.vh2_it2 = 415
    h.ah_it2 = 30
    h.v12m_it2 = 45
    h.v12h_it2 = 65
    h.am_it2 = 3
    h.vshift_it2 = 10
    h.vm1_it2 = 50
    h.vm2_it2 = 125

    h.caix_kca = 0.7  	#// Ca-sensitivity of Kca channel
    h.Ra_kca = 1  	#// Activation rate Kca
    h.Rb_kca = 2.5	#// inactivation rate Kca, important !
    h.taur_cad = 80    	#// Calcium extrusion rate, in ms
    h.eh_ih = -45

    axon_axis = np.array([0, 0, 1])

    sec_type_counter = {"soma": 0,
                        "axon": 0,
                        "my": 0,
                        "node": 0
                        }


    axon_length = 20 #25
    axon_dict["morphology"]["L"] = axon_length
    nseg = axon_dict["nseg"]
    if axon_diameter is not None:
        axon_diam = axon_diameter
        terminal_diam = axon_diam
        axon_dict["morphology"]["diam"] = np.ones(nseg) * axon_diam
        # Using a different terminal diameter does not currently work properly.
        # Since only the end-point is adjusted it is basically not accounted
        # for in NEURON. To fix this a new section (?) for the terminal must probably be made
        axon_dict["morphology"]["diam"][-1] = terminal_diam
    start_pos = np.array([0, 0, 0])

    for i in range(40):

        end_pos = start_pos + axon_axis * axon_length
        sec, sec_type_counter = make_sec_from_dict("axon", sec_type_counter, axon_dict, start_pos, end_pos)
        if i == 0:
            pass
        else:
            sec.connect(sec_list[-1](1), 0)

        sec_list.append(sec)

        start_pos = end_pos.copy()

    if num_splits > 0:
        # split_angle_fraction = 2 # 2
        sec_list, sec_node_left, sec_node_right, sec_type_counter = make_unmyelinated_branch(sec_list[-1],
                                                                                           axon_axis,
                                                                                           axon_length,
                                                                                           sec_list,
                                                                                           split_angle_fraction,
                                                                                           sec_type_counter)

    if num_splits > 1:
        # split_angle_fraction = 2#0.5

        sec_list, sec_node_left_1, sec_node_right_1, sec_type_counter = make_unmyelinated_branch(sec_node_left,
                                                                                               axon_axis,
                                                                                               axon_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)

        sec_list, sec_node_left_2, sec_node_right_2, sec_type_counter = make_unmyelinated_branch(sec_node_right,
                                                                                               axon_axis,
                                                                                               axon_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction,
                                                                                               sec_type_counter)
    if num_splits > 2:
        # split_angle_fraction = 2#0.25

        sec_list, sec_node_left_3, sec_node_right_3, sec_type_counter = make_unmyelinated_branch(sec_node_left_1,
                                                                                               axon_axis,
                                                                                               axon_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_4, sec_node_right_4, sec_type_counter = make_unmyelinated_branch(sec_node_right_1,
                                                                                               axon_axis,
                                                                                               axon_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_5, sec_node_right_5, sec_type_counter = make_unmyelinated_branch(sec_node_left_2,
                                                                                               axon_axis,
                                                                                               axon_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_6, sec_node_right_6, sec_type_counter = make_unmyelinated_branch(sec_node_right_2,
                                                                                               axon_axis,
                                                                                               axon_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction, sec_type_counter)
    if num_splits > 3:
        # split_angle_fraction = 2#0.1

        sec_list, sec_node_left_7, sec_node_right_7, sec_type_counter = make_unmyelinated_branch(sec_node_left_3,
                                                                                               axon_axis,
                                                                                               axon_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_8, sec_node_right_8, sec_type_counter = make_unmyelinated_branch(sec_node_right_3,
                                                                                               axon_axis,
                                                                                               axon_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_9, sec_node_right_9, sec_type_counter = make_unmyelinated_branch(sec_node_left_4,
                                                                                               axon_axis,
                                                                                               axon_length,
                                                                                               sec_list,
                                                                                               split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_10, sec_node_right_10, sec_type_counter = make_unmyelinated_branch(sec_node_right_4,
                                                                                                 axon_axis,
                                                                                                 axon_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_11, sec_node_right_11, sec_type_counter = make_unmyelinated_branch(sec_node_left_5,
                                                                                                 axon_axis,
                                                                                                 axon_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_12, sec_node_right_12, sec_type_counter = make_unmyelinated_branch(sec_node_right_5,
                                                                                                 axon_axis,
                                                                                                 axon_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_13, sec_node_right_13, sec_type_counter = make_unmyelinated_branch(sec_node_left_6,
                                                                                                 axon_axis,
                                                                                                 axon_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction, sec_type_counter)

        sec_list, sec_node_left_14, sec_node_right_14, sec_type_counter = make_unmyelinated_branch(sec_node_right_6,
                                                                                                 axon_axis,
                                                                                                 axon_length,
                                                                                                 sec_list,
                                                                                                 split_angle_fraction, sec_type_counter)
    # neuron.h.define_shape()
    allsecs = h.SectionList(sec_list)
    cell_params = {
        'v_init': -80.,    # initial crossmembrane potential
        'passive': False,   # switch on passive mechs
        'nsegs_method': "lambda_f",
        'lambda_f': 500.,
        'dt': dt,   # [ms] dt's should be in powers of 2 for both,
        'tstart': -1,    # start time of simulation, recorders start at t=0
        'tstop': tstop,   # stop simulation at 200 ms. These can be overridden
        "extracellular": False,
        "pt3d": False,
        "delete_sections": False}

    cell = LFPy.Cell(morphology=allsecs, **cell_params)
    #cell.set_rotation(y=np.pi)
    cell.set_pos(z=-np.max(cell.z) - 0)
    cell.sec_list = sec_list

    return cell


def test_stim_cell(cell):

    stim_params = {'amp': -0.06,
                   'idx': 0,
                   'pptype': "ISyn",
                   'dur': 1e9,
                   'delay': 5}
    neuron.load_mechanisms("cell_models")
    synapse = LFPy.StimIntElectrode(cell, **stim_params)

    return cell, synapse


if __name__ == '__main__':

    import LFPy

    import os
    import neuron
    h = neuron.h
    dt = 2**-6
    tstop = 15
    sim_type = ["extract_axon", "reconstruct_axon"][1]
    pid = os.fork()
    if pid == 0:
        cell_ext = test_axon_extraction(dt, tstop)

        print("EXTRACTED:")
        # for sec in cell.allseclist:
        #     print()
        #     print(sec.name())
        #     print(neuron.psection(sec))
            # print(sec.L, sec.diam, sec.Ra, sec.cm, sec.g_pas, sec.e_pas)


        cell_ext, synapse = test_stim_cell(cell_ext)
        # for sec in cell.allseclist:
        #     if "soma" in sec.name():
        #         stim = h.IClamp(0.5, sec=sec)
        #         stim.amp = 0.1
        #         stim.delay = 50
        #         stim.dur = 10
        cell_ext.simulate(rec_vmem=True, rec_imem=True)
        np.save("vmem_extracted.npy", cell_ext.vmem)


        os._exit(0)
    else:
        os.waitpid(pid, 0)

    pid = os.fork()
    if pid == 0:
        cell_ext = return_constructed_unmyelinated_axon(dt, tstop, 1)
        print("CONSTRUCTED:")
        # for sec in cell.allseclist:
        #     print()
        #     print(sec.name())
        #     print(neuron.psection(sec))
            # print(sec.L, sec.diam, sec.Ra, sec.cm, sec.g_pas, sec.e_pas)

        # for sec in cell.allseclist:
        #     if "soma" in sec.name():
        #         stim = h.IClamp(0.5, sec=sec)
        #         stim.amp = 0.1
        #         stim.delay = 50
        #         stim.dur = 10
        cell_ext, synapse = test_stim_cell(cell_ext)
        cell_ext.simulate(rec_vmem=True, rec_imem=True)
        np.save("vmem_constructed.npy", cell_ext.vmem)


        os._exit(0)
    else:
        os.waitpid(pid, 0)


        # cell = test_axon_extraction(dt, tstop)

    cell_ext = test_axon_extraction(dt, tstop)
    cell_rec = return_constructed_unmyelinated_axon(dt, tstop, 1)
    # cell_rec.set_rotation(x=np.pi / 2)

    for sec in cell_ext.allseclist:
        sec_dict = neuron.psection(sec)
        print(sec.name(), sec_dict)

    import matplotlib
    # matplotlib.use("AGG")
    import matplotlib.pyplot as plt
    fig = plt.figure()
    # ax1 = fig.add_subplot(121, aspect=1, xlim=[-200, 200], ylim=[-900, 20])
    ax1 = fig.add_subplot(121, aspect=1, xlim=[-200, 200], ylim=[-150, 1400])
    ax2 = fig.add_subplot(122)

    sec_clrs = {"Myelin": 'olive',
        "dend": '0.6',
        "soma": 'k',
        'apic': '0.8',
        "axon": 'lightgreen',
        "node": 'r',
        "my": '0.3',
        "Unmyelin": 'salmon',
        "Node": 'r',
        "hilloc": 'lightblue',
        "hill": 'pink',}
    possible_names = ["Myelin", "axon", "Unmyelin", "Node", "node", "my",
                      "hilloc",
                      "hill", "apic", "dend", "soma"]
    used_clrs = []
    # # fig2 = plt.figure()
    # # ax_ = fig2.add_subplot(111)
    for idx in range(cell_ext.totnsegs):
        sec_name = cell_ext.get_idx_name(idx)[1]
        #print(sec_name)
        c = 'k'
        for ax_name in possible_names:
            if ax_name in sec_name:
                # print(ax_name, sec_name)
                c = sec_clrs[ax_name]
                if not ax_name in used_clrs:
                    used_clrs.append(ax_name)

        ax1.plot(cell_ext.x[idx], cell_ext.z[idx], '-',
                 c=c, clip_on=True, lw=np.sqrt(cell_ext.d[idx]) * 1)
    cell_ext.__del__()
    for idx in range(cell_rec.totnsegs):
        sec_name = cell_rec.get_idx_name(idx)[1]
        #print(sec_name)
        c = 'k'
        for ax_name in possible_names:
            if ax_name in sec_name:
                # print(ax_name, sec_name)
                c = sec_clrs[ax_name]
                if not ax_name in used_clrs:
                    used_clrs.append(ax_name)

        ax1.plot(cell_rec.x[idx], cell_rec.z[idx], '-',
                 c=c, clip_on=True, lw=np.sqrt(cell_rec.d[idx]) * 1)


    vmem_ext = np.load("vmem_extracted.npy")
    vmem_cst = np.load("vmem_constructed.npy")

    diff = np.max(np.abs(vmem_cst[[0, -1], :] - vmem_ext[[0, -1], :]))
    print("MAX DIFF:", diff)

    [ax2.plot(vmem_ext[idx], 'r') for idx in range(len(vmem_ext))]
    [ax2.plot(vmem_cst[idx], 'k--') for idx in range(len(vmem_cst))]
    plt.savefig("test_axon_construction_compare_unmyelinated.png")

    plt.show()